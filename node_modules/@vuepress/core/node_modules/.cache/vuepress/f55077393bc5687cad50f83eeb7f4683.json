{"remainingRequest":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/vuepress-theme-vuesax/Layout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/vuepress-theme-vuesax/Layout.vue","mtime":1670310983364},{"path":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/cache-loader/dist/cjs.js","mtime":1670310981302},{"path":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/babel-loader/lib/index.js","mtime":1670310981084},{"path":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/cache-loader/dist/cjs.js","mtime":1670310981302},{"path":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/vue-loader/lib/index.js","mtime":1670310983283}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgbnByb2dyZXNzIGZyb20gJ25wcm9ncmVzcycKaW1wb3J0IEhvbWUgZnJvbSAnLi9Ib21lLnZ1ZScKaW1wb3J0IE5hdmJhciBmcm9tICcuL05hdmJhci52dWUnCmltcG9ydCBQYWdlIGZyb20gJy4vUGFnZS52dWUnCmltcG9ydCBTaWRlYmFyIGZyb20gJy4vU2lkZWJhci52dWUnCmltcG9ydCBzaWRlYmFyTWFwIGZyb20gJy4vU2lkZWJhck1hcC52dWUnCmltcG9ydCB7IHJlc29sdmVTaWRlYmFySXRlbXMsIHBhdGhUb0NvbXBvbmVudE5hbWUgfSBmcm9tICcuL3V0aWwnCmltcG9ydCAnLi9pY29ucy9mb250L2ZsYXRpY29uLmNzcycKaW1wb3J0IENvZGVGdW5kIGZyb20gJy4vQ29kZUZvdW5kJwppbXBvcnQgQ2FyYm9uIGZyb20gJy4vQ2FyYm9uJwpleHBvcnQgZGVmYXVsdCB7CiAgICBjb21wb25lbnRzOiB7IEhvbWUsIFBhZ2UsIFNpZGViYXIsIE5hdmJhciwgQ29kZUZ1bmQsIENhcmJvbiwgc2lkZWJhck1hcCB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBpc1NpZGViYXJPcGVuOiBmYWxzZSwKICAgICAgICAgICAgY3VycmVudE1ldGFUYWdzOiBbXQogICAgICAgIH0KICAgIH0sCgogICAgY29tcHV0ZWQ6IHsKICAgICAgICBzaG91bGRTaG93TmF2YmFyKCkgewogICAgICAgICAgICBjb25zdCB7IHRoZW1lQ29uZmlnIH0gPSB0aGlzLiRzaXRlCiAgICAgICAgICAgIGNvbnN0IHsgZnJvbnRtYXR0ZXIgfSA9IHRoaXMuJHBhZ2UKICAgICAgICAgICAgaWYgKGZyb250bWF0dGVyLm5hdmJhciA9PT0gZmFsc2UpIHJldHVybiBmYWxzZQogICAgICAgICAgICByZXR1cm4gKAogICAgICAgICAgICAgICAgdGhpcy4kdGl0bGUgfHwKICAgICAgICAgICAgICAgIHRoZW1lQ29uZmlnLmxvZ28gfHwKICAgICAgICAgICAgICAgIHRoZW1lQ29uZmlnLnJlcG8gfHwKICAgICAgICAgICAgICAgIHRoZW1lQ29uZmlnLm5hdiB8fAogICAgICAgICAgICAgICAgdGhpcy4kdGhlbWVMb2NhbGVDb25maWcubmF2CiAgICAgICAgICAgICkKICAgICAgICB9LAogICAgICAgIHNob3VsZFNob3dTaWRlYmFyKCkgewogICAgICAgICAgICBjb25zdCB7IHRoZW1lQ29uZmlnIH0gPSB0aGlzLiRzaXRlCiAgICAgICAgICAgIGNvbnN0IHsgZnJvbnRtYXR0ZXIgfSA9IHRoaXMuJHBhZ2UKICAgICAgICAgICAgcmV0dXJuICgKICAgICAgICAgICAgICAgICFmcm9udG1hdHRlci5sYXlvdXQgJiYKICAgICAgICAgICAgICAgICFmcm9udG1hdHRlci5ob21lICYmCiAgICAgICAgICAgICAgICBmcm9udG1hdHRlci5zaWRlYmFyICE9PSBmYWxzZSAmJgogICAgICAgICAgICAgICAgdGhpcy5zaWRlYmFySXRlbXMubGVuZ3RoCiAgICAgICAgICAgICkKICAgICAgICB9LAogICAgICAgIHNpZGViYXJJdGVtcygpIHsKICAgICAgICAgICAgcmV0dXJuIHJlc29sdmVTaWRlYmFySXRlbXMoCiAgICAgICAgICAgICAgICB0aGlzLiRwYWdlLAogICAgICAgICAgICAgICAgdGhpcy4kcGFnZS5yZWd1bGFyUGF0aCwKICAgICAgICAgICAgICAgIHRoaXMuJHNpdGUsCiAgICAgICAgICAgICAgICB0aGlzLiRsb2NhbGVQYXRoCiAgICAgICAgICAgICkKICAgICAgICB9LAogICAgICAgIHNvcnRDb21wb25lbnRzKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5zaWRlYmFySXRlbXMKCiAgICAgICAgICAgIC8vIHJldHVybiB0aGlzLnNpZGViYXJJdGVtcy5tYXAoKGl0ZW1zKSA9PiB7CiAgICAgICAgICAgIC8vICAgaWYoaXRlbXMudGl0bGUgPT0gJ0NvbXBvbmVudHMnKSB7CiAgICAgICAgICAgIC8vICAgICBpdGVtcy5jaGlsZHJlbiA9IGl0ZW1zLmNoaWxkcmVuLnNvcnQoKGEsIGIpID0+IGEudGl0bGUubG9jYWxlQ29tcGFyZShiLnRpdGxlKSkKICAgICAgICAgICAgLy8gICB9CiAgICAgICAgICAgIC8vICAgcmV0dXJuIGl0ZW1zCiAgICAgICAgICAgIC8vIH0pCiAgICAgICAgfSwKICAgICAgICBwYWdlQ2xhc3NlcygpIHsKICAgICAgICAgICAgY29uc3QgdXNlclBhZ2VDbGFzcyA9IHRoaXMuJHBhZ2UuZnJvbnRtYXR0ZXIucGFnZUNsYXNzCiAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJ25vLW5hdmJhcic6ICF0aGlzLnNob3VsZFNob3dOYXZiYXIsCiAgICAgICAgICAgICAgICAgICAgJ3NpZGViYXItb3Blbic6IHRoaXMuaXNTaWRlYmFyT3BlbiwKICAgICAgICAgICAgICAgICAgICAnbm8tc2lkZWJhcic6ICF0aGlzLnNob3VsZFNob3dTaWRlYmFyCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgdXNlclBhZ2VDbGFzcwogICAgICAgICAgICBdCiAgICAgICAgfQogICAgfSwKCiAgICBjcmVhdGVkKCkgewogICAgICAgIGlmICh0aGlzLiRzc3JDb250ZXh0KSB7CiAgICAgICAgICAgIHRoaXMuJHNzckNvbnRleHQudGl0bGUgPSB0aGlzLiR0aXRsZQogICAgICAgICAgICB0aGlzLiRzc3JDb250ZXh0LmxhbmcgPSB0aGlzLiRsYW5nCiAgICAgICAgICAgIHRoaXMuJHNzckNvbnRleHQuZGVzY3JpcHRpb24gPSB0aGlzLiRwYWdlLmRlc2NyaXB0aW9uIHx8IHRoaXMuJGRlc2NyaXB0aW9uCiAgICAgICAgfQogICAgfSwKCiAgICBtb3VudGVkKCkgewogICAgICAgIC8vIHVwZGF0ZSB0aXRsZSAvIG1ldGEgdGFncwogICAgICAgIC8vIHRoaXMuY3VycmVudE1ldGFUYWdzID0gW10KICAgICAgICAvLyBjb25zdCB1cGRhdGVNZXRhID0gKCkgPT4gewogICAgICAgIC8vICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmxhbmcgPSB0aGlzLiRsYW5nCiAgICAgICAgLy8gICBjb25zdCBtZXRhID0gWwogICAgICAgIC8vICAgICB7CiAgICAgICAgLy8gICAgICAgbmFtZTogJ2Rlc2NyaXB0aW9uJywKICAgICAgICAvLyAgICAgICBjb250ZW50OiB0aGlzLiRkZXNjcmlwdGlvbgogICAgICAgIC8vICAgICB9LAogICAgICAgIC8vICAgICAuLi4odGhpcy4kcGFnZS5mcm9udG1hdHRlci5tZXRhIHx8IFtdKQogICAgICAgIC8vICAgXQogICAgICAgIC8vICAgdGhpcy5jdXJyZW50TWV0YVRhZ3MgPSB1cGRhdGVNZXRhVGFncyhtZXRhLCB0aGlzLmN1cnJlbnRNZXRhVGFncykKICAgICAgICAvLyB9CiAgICAgICAgLy8gdGhpcy4kd2F0Y2goJyRwYWdlJywgdXBkYXRlTWV0YSkKICAgICAgICAvLyB1cGRhdGVNZXRhKCkKCiAgICAgICAgLy8gY29uZmlndXJlIHByb2dyZXNzIGJhcgogICAgICAgIC8vIG5wcm9ncmVzcy5jb25maWd1cmUoeyBzaG93U3Bpbm5lcjogZmFsc2UgfSkKCiAgICAgICAgLy8gdGhpcy4kcm91dGVyLmJlZm9yZUVhY2goKHRvLCBmcm9tLCBuZXh0KSA9PiB7CiAgICAgICAgLy8gICBpZiAodG8ucGF0aCAhPT0gZnJvbS5wYXRoICYmICFWdWUuY29tcG9uZW50KHBhdGhUb0NvbXBvbmVudE5hbWUodG8ucGF0aCkpKSB7CiAgICAgICAgLy8gICAgIG5wcm9ncmVzcy5zdGFydCgpCiAgICAgICAgLy8gICB9CiAgICAgICAgLy8gICBuZXh0KCkKICAgICAgICAvLyB9KQoKICAgICAgICB0aGlzLiRyb3V0ZXIuYWZ0ZXJFYWNoKCgpID0+IHsKICAgICAgICAgICAgLy8gbnByb2dyZXNzLmRvbmUoKQogICAgICAgICAgICB0aGlzLmlzU2lkZWJhck9wZW4gPSBmYWxzZQogICAgICAgIH0pCiAgICB9LAoKICAgIGJlZm9yZURlc3Ryb3koKSB7CiAgICAgICAgdXBkYXRlTWV0YVRhZ3MobnVsbCwgdGhpcy5jdXJyZW50TWV0YVRhZ3MpCiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgICB0b2dnbGVTaWRlYmFyKHRvKSB7CiAgICAgICAgICAgIHRoaXMuaXNTaWRlYmFyT3BlbiA9IHR5cGVvZiB0byA9PT0gJ2Jvb2xlYW4nID8gdG8gOiAhdGhpcy5pc1NpZGViYXJPcGVuCiAgICAgICAgfSwKICAgICAgICAvLyBzaWRlIHN3aXBlCiAgICAgICAgb25Ub3VjaFN0YXJ0KGUpIHsKICAgICAgICAgICAgdGhpcy50b3VjaFN0YXJ0ID0gewogICAgICAgICAgICAgICAgeDogZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYLAogICAgICAgICAgICAgICAgeTogZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRZCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9uVG91Y2hFbmQoZSkgewogICAgICAgICAgICBjb25zdCBkeCA9IGUuY2hhbmdlZFRvdWNoZXNbMF0uY2xpZW50WCAtIHRoaXMudG91Y2hTdGFydC54CiAgICAgICAgICAgIGNvbnN0IGR5ID0gZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRZIC0gdGhpcy50b3VjaFN0YXJ0LnkKICAgICAgICAgICAgaWYgKE1hdGguYWJzKGR4KSA+IE1hdGguYWJzKGR5KSAmJiBNYXRoLmFicyhkeCkgPiA0MCkgewogICAgICAgICAgICAgICAgaWYgKGR4ID4gMCAmJiB0aGlzLnRvdWNoU3RhcnQueCA8PSA4MCkgewogICAgICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlU2lkZWJhcih0cnVlKQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnRvZ2dsZVNpZGViYXIoZmFsc2UpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0KCmZ1bmN0aW9uIHVwZGF0ZU1ldGFUYWdzKG1ldGEsIGN1cnJlbnQpIHsKICAgIGlmIChjdXJyZW50KSB7CiAgICAgICAgY3VycmVudC5mb3JFYWNoKGMgPT4gewogICAgICAgICAgICBkb2N1bWVudC5oZWFkLnJlbW92ZUNoaWxkKGMpCiAgICAgICAgfSkKICAgIH0KICAgIGlmIChtZXRhKSB7CiAgICAgICAgcmV0dXJuIG1ldGEubWFwKG0gPT4gewogICAgICAgICAgICBjb25zdCB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdtZXRhJykKICAgICAgICAgICAgT2JqZWN0LmtleXMobSkuZm9yRWFjaChrZXkgPT4gewogICAgICAgICAgICAgICAgdGFnLnNldEF0dHJpYnV0ZShrZXksIG1ba2V5XSkKICAgICAgICAgICAgfSkKICAgICAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCh0YWcpCiAgICAgICAgICAgIHJldHVybiB0YWcKICAgICAgICB9KQogICAgfQp9Cg=="},null]}