{"remainingRequest":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/vuepress-theme-vuesax/NavLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/vuepress-theme-vuesax/NavLinks.vue","mtime":1670310983364},{"path":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/cache-loader/dist/cjs.js","mtime":1670310981302},{"path":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/babel-loader/lib/index.js","mtime":1670310981084},{"path":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/cache-loader/dist/cjs.js","mtime":1670310981302},{"path":"/Users/joker/Desktop/Pratice/Self/myBlog/node_modules/vue-loader/lib/index.js","mtime":1670310983283}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE91dGJvdW5kTGluayBmcm9tICcuL091dGJvdW5kTGluay52dWUnOwppbXBvcnQgRHJvcGRvd25MaW5rIGZyb20gJy4vRHJvcGRvd25MaW5rLnZ1ZSc7CmltcG9ydCB7IHJlc29sdmVOYXZMaW5rSXRlbSB9IGZyb20gJy4vdXRpbCc7CmltcG9ydCBOYXZMaW5rIGZyb20gJy4vTmF2TGluay52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgT3V0Ym91bmRMaW5rLAogICAgTmF2TGluaywKICAgIERyb3Bkb3duTGluawogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHVzZXJOYXYoKSB7CiAgICAgIHJldHVybiB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5uYXYgfHwgdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5uYXYgfHwgW107CiAgICB9LAogICAgbmF2KCkgewogICAgICBjb25zdCB7CiAgICAgICAgbG9jYWxlcwogICAgICB9ID0gdGhpcy4kc2l0ZTsKICAgICAgaWYgKGxvY2FsZXMgJiYgT2JqZWN0LmtleXMobG9jYWxlcykubGVuZ3RoID4gMSkgewogICAgICAgIGxldCBjdXJyZW50TGluayA9IHRoaXMuJHBhZ2UucGF0aDsKICAgICAgICBjb25zdCByb3V0ZXMgPSB0aGlzLiRyb3V0ZXIub3B0aW9ucy5yb3V0ZXM7CiAgICAgICAgY29uc3QgdGhlbWVMb2NhbGVzID0gdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5sb2NhbGVzIHx8IHt9OwogICAgICAgIGNvbnN0IGxhbmd1YWdlRHJvcGRvd24gPSB7CiAgICAgICAgICB0ZXh0OiB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5zZWxlY3RUZXh0IHx8ICdMYW5ndWFnZXMnLAogICAgICAgICAgaXRlbXM6IE9iamVjdC5rZXlzKGxvY2FsZXMpLm1hcChwYXRoID0+IHsKICAgICAgICAgICAgY29uc3QgbG9jYWxlID0gbG9jYWxlc1twYXRoXTsKICAgICAgICAgICAgY29uc3QgdGV4dCA9IHRoZW1lTG9jYWxlc1twYXRoXSAmJiB0aGVtZUxvY2FsZXNbcGF0aF0ubGFiZWwgfHwgbG9jYWxlLmxhbmc7CiAgICAgICAgICAgIGxldCBsaW5rOwogICAgICAgICAgICAvLyBTdGF5IG9uIHRoZSBjdXJyZW50IHBhZ2UKICAgICAgICAgICAgaWYgKGxvY2FsZS5sYW5nID09PSB0aGlzLiRsYW5nKSB7CiAgICAgICAgICAgICAgbGluayA9IGN1cnJlbnRMaW5rOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIFRyeSB0byBzdGF5IG9uIHRoZSBzYW1lIHBhZ2UKICAgICAgICAgICAgICBsaW5rID0gY3VycmVudExpbmsucmVwbGFjZSh0aGlzLiRsb2NhbGVDb25maWcucGF0aCwgcGF0aCk7CiAgICAgICAgICAgICAgLy8gZmFsbGJhY2sgdG8gaG9tZXBhZ2UKICAgICAgICAgICAgICBpZiAoIXJvdXRlcy5zb21lKHJvdXRlID0+IHJvdXRlLnBhdGggPT09IGxpbmspKSB7CiAgICAgICAgICAgICAgICBsaW5rID0gcGF0aDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICB0ZXh0LAogICAgICAgICAgICAgIGxpbmsKICAgICAgICAgICAgfTsKICAgICAgICAgIH0pCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gWy4uLnRoaXMudXNlck5hdiwgbGFuZ3VhZ2VEcm9wZG93bl07CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMudXNlck5hdjsKICAgIH0sCiAgICB1c2VyTGlua3MoKSB7CiAgICAgIHJldHVybiAodGhpcy5uYXYgfHwgW10pLm1hcChsaW5rID0+IHsKICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihyZXNvbHZlTmF2TGlua0l0ZW0obGluayksIHsKICAgICAgICAgIGl0ZW1zOiAobGluay5pdGVtcyB8fCBbXSkubWFwKHJlc29sdmVOYXZMaW5rSXRlbSkKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgcmVwb0xpbmsoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICByZXBvCiAgICAgIH0gPSB0aGlzLiRzaXRlLnRoZW1lQ29uZmlnOwogICAgICBpZiAocmVwbykgewogICAgICAgIHJldHVybiAvXmh0dHBzPzovLnRlc3QocmVwbykgPyByZXBvIDogYGh0dHBzOi8vZ2l0aHViLmNvbS8ke3JlcG99YDsKICAgICAgfQogICAgfSwKICAgIHJlcG9MYWJlbCgpIHsKICAgICAgaWYgKCF0aGlzLnJlcG9MaW5rKSByZXR1cm47CiAgICAgIGlmICh0aGlzLiRzaXRlLnRoZW1lQ29uZmlnLnJlcG9MYWJlbCkgewogICAgICAgIHJldHVybiB0aGlzLiRzaXRlLnRoZW1lQ29uZmlnLnJlcG9MYWJlbDsKICAgICAgfQogICAgICBjb25zdCByZXBvSG9zdCA9IHRoaXMucmVwb0xpbmsubWF0Y2goL15odHRwcz86XC9cL1teL10rLylbMF07CiAgICAgIGNvbnN0IHBsYXRmb3JtcyA9IFsnR2l0SHViJywgJ0dpdExhYicsICdCaXRidWNrZXQnXTsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwbGF0Zm9ybXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBjb25zdCBwbGF0Zm9ybSA9IHBsYXRmb3Jtc1tpXTsKICAgICAgICBpZiAobmV3IFJlZ0V4cChwbGF0Zm9ybSwgJ2knKS50ZXN0KHJlcG9Ib3N0KSkgewogICAgICAgICAgcmV0dXJuIHBsYXRmb3JtOwogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gJ1NvdXJjZSc7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":"AAqBA;AACA;AACA;AACA;AAEA;EACAA;IAAAC;IAAAC;IAAAC;EAAA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QAAAC;MAAA;MACA;QACA;QACA;QACA;QACA;UACAC;UACAC;YACA;YACA;YACA;YACA;YACA;cACAC;YACA;cACA;cACAA;cACA;cACA;gBACAA;cACA;YACA;YACA;cAAAF;cAAAE;YAAA;UACA;QACA;QACA;MACA;MACA;IACA;IACAC;MACA;QACA;UACAF;QACA;MACA;IACA;IACAG;MACA;QAAAC;MAAA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;MAEA;MACA;MACA;QACA;QACA;UACA;QACA;MACA;MAEA;IACA;EACA;AACA","names":["components","OutboundLink","NavLink","DropdownLink","computed","userNav","nav","locales","text","items","link","userLinks","repoLink","repo","repoLabel"],"sourceRoot":"node_modules/vuepress-theme-vuesax","sources":["NavLinks.vue"],"sourcesContent":["<template>\n    <nav class=\"nav-links\" v-if=\"userLinks.length || repoLink\">\n        <!-- user links -->\n        <div class=\"nav-item\" v-for=\"item in userLinks\" :key=\"item.link\">\n            <DropdownLink v-if=\"item.type === 'links'\" :item=\"item\" />\n            <NavLink v-else :item=\"item\" />\n        </div>\n\n        <!-- repo link -->\n        <!-- <a v-if=\"repoLink\"\n      :href=\"repoLink\"\n      class=\"repo-link flaticon-github\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <! {{ repoLabel }} -->\n        <!-- <OutboundLink/> -->\n        <!-- </a> -->\n    </nav>\n</template>\n\n<script>\nimport OutboundLink from './OutboundLink.vue'\nimport DropdownLink from './DropdownLink.vue'\nimport { resolveNavLinkItem } from './util'\nimport NavLink from './NavLink.vue'\n\nexport default {\n    components: { OutboundLink, NavLink, DropdownLink },\n    computed: {\n        userNav() {\n            return this.$themeLocaleConfig.nav || this.$site.themeConfig.nav || []\n        },\n        nav() {\n            const { locales } = this.$site\n            if (locales && Object.keys(locales).length > 1) {\n                let currentLink = this.$page.path\n                const routes = this.$router.options.routes\n                const themeLocales = this.$site.themeConfig.locales || {}\n                const languageDropdown = {\n                    text: this.$themeLocaleConfig.selectText || 'Languages',\n                    items: Object.keys(locales).map(path => {\n                        const locale = locales[path]\n                        const text = (themeLocales[path] && themeLocales[path].label) || locale.lang\n                        let link\n                        // Stay on the current page\n                        if (locale.lang === this.$lang) {\n                            link = currentLink\n                        } else {\n                            // Try to stay on the same page\n                            link = currentLink.replace(this.$localeConfig.path, path)\n                            // fallback to homepage\n                            if (!routes.some(route => route.path === link)) {\n                                link = path\n                            }\n                        }\n                        return { text, link }\n                    })\n                }\n                return [...this.userNav, languageDropdown]\n            }\n            return this.userNav\n        },\n        userLinks() {\n            return (this.nav || []).map(link => {\n                return Object.assign(resolveNavLinkItem(link), {\n                    items: (link.items || []).map(resolveNavLinkItem)\n                })\n            })\n        },\n        repoLink() {\n            const { repo } = this.$site.themeConfig\n            if (repo) {\n                return /^https?:/.test(repo) ? repo : `https://github.com/${repo}`\n            }\n        },\n        repoLabel() {\n            if (!this.repoLink) return\n            if (this.$site.themeConfig.repoLabel) {\n                return this.$site.themeConfig.repoLabel\n            }\n\n            const repoHost = this.repoLink.match(/^https?:\\/\\/[^/]+/)[0]\n            const platforms = ['GitHub', 'GitLab', 'Bitbucket']\n            for (let i = 0; i < platforms.length; i++) {\n                const platform = platforms[i]\n                if (new RegExp(platform, 'i').test(repoHost)) {\n                    return platform\n                }\n            }\n\n            return 'Source'\n        }\n    }\n}\n</script>\n\n<style lang=\"stylus\">\n@import './styles/config.styl'\n\n\n\n.repoLink\n  position: relative;\n.iconx {\n  margin-left: 0px !important;\n}\n.nav-links\n  display inline-block\n  padding-right: 0px;\n  a\n    // line-height 1.25rem\n    color inherit\n    padding: .7rem;\n    transition: all .2s ease\n    position: relative;\n    &:after\n      content: ''\n      display: block\n      position: absolute\n      width: 0%\n      left: 50%\n      transform: translate(-50%)\n      height: 3px\n      border-radius 0px 0px 2px 2px\n      background: $accentColor\n      transition: all .2s ease\n      top: -1px;\n    &:hover, &.router-link-active\n      color $accentColor\n    &:hover:after\n      width: 40% !important\n  .nav-item\n    cursor: pointer\n    position relative\n    display inline-block\n    margin-left .4rem\n    font-weight 500\n    // line-height 2rem\n    position: relative\n  .github-link\n    margin-left 1.5rem\n\n@media (max-width: $MQMobile)\n  .nav-links\n    .nav-item, .github-link\n      margin-left 0\n      a\n        padding: 0px !important;\n    .repo-link\n      display: none !important;\n.links\n  // right 1.5rem !important\n@media (min-width: $MQMobile)\n  .nav-links\n    a\n\n      &:hover, &.router-link-active\n        color $accentColor\n        // margin-bottom -2px\n      &:hover:after, &.router-link-active:after\n        width: 40% !important\n        // border-bottom 2px solid lighten($accentColor, 5%)\n</style>\n"]}]}