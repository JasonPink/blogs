(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{415:function(t,s,a){"use strict";a.r(s);var r=a(1),h=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"前端路由原理-hash-和-history"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端路由原理-hash-和-history"}},[t._v("#")]),t._v(" 前端路由原理 hash 和 history")]),t._v(" "),s("blockquote",[s("p",[t._v("在了解路由原理之前，我们先来聊聊单页面应用，什么是单页面应用？")])]),t._v(" "),s("p",[t._v("单页面应用（SPA）：单一页面应用程序，只有一个完整的页面。它在第一次加载页面时,就将唯一完整的 html 页面和所有其余页面组件一起下载下来，这样它在切换页面时，不会加载整个页面，而是只更新某个指定的容器中内容。"),s("strong",[t._v("核心是更新视图而不重新请求页面")])]),t._v(" "),s("p",[t._v("MDN 解释：SPA 是指加载一个单独网页的 web 应用实现，当需要显示不同的内容时，它通过 JavaScript API（例如 XMLHttpRequest 和 Fetch）更新主体内容")]),t._v(" "),s("h2",{attrs:{id:"hash-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash-模式"}},[t._v("#")]),t._v(" hash 模式")]),t._v(" "),s("p",[t._v("hash 模式是一种把前端路由的路径用井号 # 拼接在真实 url 后面的模式。当井号 # 后面的路径发生变化时，浏览器并不会重新发起请求，而是会触发 onhashchange 事件。")]),t._v(" "),s("ul",[s("li",[t._v("hash 虽然出现在 URL 中，但不会被包括在 HTTP 请求中。它是用来指导浏览器动作的，对服务器端完全无用，因此，"),s("strong",[t._v("改变 hash 不会重新加载页面")])])]),t._v(" "),s("h2",{attrs:{id:"history-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history-模式"}},[t._v("#")]),t._v(" history 模式")]),t._v(" "),s("p",[t._v("history 模式 是 H5 提供的新特性，通过调用 window.history 对象上的一系列方法来实现页面的无刷新跳转，允许开发者直接更改前端路由，即更新浏览器 URL 地址而不重新发起请求。")]),t._v(" "),s("ul",[s("li",[t._v("使用 history 模式时，在对当前的页面进行刷新时，此时浏览器会使用当前页面路径重新发起请求。"),s("strong",[t._v("如果 nginx 没有匹配得到当前的 url，就会出现 404 的页面")]),t._v("。Nginx 配置如下")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("try_files $uri $uri/ /index.html;\n")])])])])}),[],!1,null,null,null);s.default=h.exports}}]);