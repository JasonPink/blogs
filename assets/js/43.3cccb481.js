(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{359:function(n,i,l){n.exports=l.p+"assets/img/WX20220429-012226@2x.c7cd4518.png"},417:function(n,i,l){"use strict";l.r(i);var t=l(1),v=Object(t.a)({},(function(){var n=this,i=n._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[i("h2",{attrs:{id:"前端性能优化-加载时优化、运行时优化"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化-加载时优化、运行时优化"}},[n._v("#")]),n._v(" 前端性能优化（加载时优化、运行时优化）")]),n._v(" "),i("ol",[i("li",[i("p",[n._v("减少 http 请求")]),n._v(" "),i("ul",[i("li",[n._v("url-loader 将小图片转成 base64 格式")]),n._v(" "),i("li",[n._v("图标采用 font-face")])])]),n._v(" "),i("li",[i("p",[n._v("使用 http2")]),n._v(" "),i("ul",[i("li",[i("p",[n._v("解析速度快")])]),n._v(" "),i("li",[i("p",[n._v("多路复用：")]),n._v(" "),i("blockquote",[i("p",[n._v("http1.1 如果要同时发送多个请求，需要建立多个 TCP 连接，一个 TCP 连接只能处理一个 http1.1 请求")])]),n._v(" "),i("blockquote",[i("p",[n._v("在 http2 中，多个请求可以共用一个 TCP 连接，这称为多路复用。同一个请求和响应用一个流来表示，并有唯一的流 ID，多个请求和响应可以乱序发送，达到目的地后再通过流 ID 重新组建")])])]),n._v(" "),i("li",[i("p",[n._v("首部压缩")])]),n._v(" "),i("li",[i("p",[n._v("优先级")])]),n._v(" "),i("li",[i("p",[n._v("流量控制")])]),n._v(" "),i("li",[i("p",[n._v("服务器推送")])])])]),n._v(" "),i("li",[i("p",[n._v("服务端渲染")])]),n._v(" "),i("li",[i("p",[n._v("静态资源使用 CDN")])]),n._v(" "),i("li",[i("p",[n._v("将 CSS 放在头部，JS 放在底部，更快的解析页面")])]),n._v(" "),i("li",[i("p",[n._v("使用字体图标 iconfont 代替图片图标")])]),n._v(" "),i("li",[i("p",[n._v("善用缓存，不重复加载相同的资源")])]),n._v(" "),i("li",[i("p",[n._v("压缩文件")]),n._v(" "),i("ul",[i("li",[n._v("js: JavaScript：UglifyPlugin")]),n._v(" "),i("li",[n._v("CSS ：MiniCssExtractPlugin")]),n._v(" "),i("li",[n._v("HTML：HtmlWebpackPlugin")]),n._v(" "),i("li",[n._v("gzip 压缩")])]),n._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[n._v("npm install compression-webpack-plugin --save-dev\nnpm install compression\n\nconst CompressionPlugin = require('compression-webpack-plugin');\nmodule.exports = {\nplugins: [new CompressionPlugin()],\n}\n")])])])]),n._v(" "),i("li",[i("p",[n._v("图片优化")]),n._v(" "),i("ul",[i("li",[n._v("图片懒加载")]),n._v(" "),i("li",[n._v("响应式图片")]),n._v(" "),i("li",[n._v("调整图片大小")]),n._v(" "),i("li",[n._v("降低图片质量（image-webpack-loader）")]),n._v(" "),i("li",[n._v("能用 css 实现尽量用 css 实现")]),n._v(" "),i("li",[n._v("使用 webp 格式的图片")])])]),n._v(" "),i("li",[i("p",[n._v("通过 webpack 按需加载代码，提取第三库代码，减少 ES6 转为 ES5 的冗余代码")]),n._v(" "),i("ul",[i("li",[n._v("提取第三方库")])]),n._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[n._v("optimization: {\nruntimeChunk: {\nname: 'manifest' // 将 webpack 的 runtime 代码拆分为一个单独的 chunk。\n},\nsplitChunks: {\ncacheGroups: {\nvendor: {\nname: 'chunk-vendors',\ntest: /[\\\\/]node_modules[\\\\/]/,\npriority: -10,\nchunks: 'initial'\n},\ncommon: {\nname: 'chunk-common',\nminChunks: 2,\npriority: -20,\nchunks: 'initial',\nreuseExistingChunk: true\n}\n},\n}\n},\n\n")])])]),i("ul",[i("li",[n._v("减少 ES6 转为 ES5 的冗余代码(@babel/plugin-transform-runtime @babel/runtime)")])])]),n._v(" "),i("li",[i("p",[n._v("减少重排和重绘")])]),n._v(" "),i("li",[i("p",[n._v("使用事件委托")])]),n._v(" "),i("li",[i("p",[n._v("使用 requestAnimationFrame 来实现视觉变化")])]),n._v(" "),i("li",[i("p",[n._v("降低 CSS 选择器的复杂度")])]),n._v(" "),i("li",[i("p",[n._v("使用 transform 和 opacity 来实现动画\n"),i("img",{attrs:{src:l(359),alt:"事件循环",title:"事件循环机制"}})])])])])}),[],!1,null,null,null);i.default=v.exports}}]);